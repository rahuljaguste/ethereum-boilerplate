import { useEffect, useState } from "react";
import { useMoralis } from "react-moralis";
import { BrowserRouter as Router, Switch, Route, Redirect, HashRouter } from "react-router-dom";
import Account from "components/Account";
import Chains from "components/Chains";
import TokenPrice from "components/TokenPrice";
import ERC20Balance from "components/ERC20Balance";
import ERC20Transfers from "components/ERC20Transfers";
import InchDex from "components/InchDex";
import NFTBalance from "components/NFTBalance";
import Wallet from "components/Wallet";
import NativeBalance from "components/NativeBalance";
import "./style.css";
import QuickStart from "components/QuickStart";
import Contract from "components/Contract/Contract";
import Ramper from "components/Ramper";
import MenuItems from "./components/MenuItems";
import {
  Stack,
  Flex,
  Button,
  Text,
  VStack,
  useBreakpointValue,
  Image,
  Box,
  HStack,
  Container,
  Vstack
} from '@chakra-ui/react';
import Navbar from "components/Navbar";


const App = ({ isServerInfo }) => {
  const { isWeb3Enabled, enableWeb3, isAuthenticated, isWeb3EnableLoading } = useMoralis();
  const {activeItem, setActiveItem} = useState('home')

  useEffect(() => {
    if (isAuthenticated && !isWeb3Enabled && !isWeb3EnableLoading) enableWeb3();
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [isAuthenticated, isWeb3Enabled]);
  const handleItemClick = (e, { name }) => setActiveItem(name)
  return (
    <Container maxW={'5xl'}>
      {/* <Flex
      w={'full'}
      h={'100vh'}
      backgroundImage={
        'images/background.jpg'
        // https://images.unsplash.com/photo-1639759022772-55dcc7a9f745?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1470&q=80
        // 'url(https://images.unsplash.com/photo-1639759022772-55dcc7a9f745?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1350&q=80)'
      }
      backgroundSize={'cover'}
      backgroundPosition={'center center'}
      flexDirection={["column"]}
      > */}
        {/* <Navbar /> */}
      <VStack
        w={'full'}
        h={'100vh'}
        justify={'center'}
        
        px={useBreakpointValue({ base: 4, md: 8 })}
        // bgGradient={'linear(to-r, blackAlpha.800, transparent)'}
        >
        <VStack  align={'flex-start'} spacing={6}  bgColor={['white']} padding={10} borderRadius={50}>
           <HStack justifyContent={'flex-end'} w={'full'}>

            <NativeBalance />
            <Account />
           </HStack>
           <HStack>
             <Stack direction={'row'}>
              <Image src='images/illustration.jpg' p={10}/>
              <Stack direction={'column'} alignItems={'center'} justifyContent={'flex-end'} p={10} >
              <Text
                color={'blue'}
                fontWeight={700}
                lineHeight={1.2}
                fontSize={useBreakpointValue({ base: '3xl', md: '4xl' })}>
                Donate Funds
                Help me build the future of Web by contributing towards development cost
              </Text>
                      {/* <Stack direction={'row'}>
                        <Button
                          bg={'blue.400'}
                          rounded={'full'}
                          color={'white'}
                          _hover={{ bg: 'blue.500' }}>
                          Show me more
                        </Button>
                        <Button
                          bg={'whiteAlpha.300'}
                          rounded={'full'}
                          color={'red'}
                          _hover={{ bg: 'whiteAlpha.500' }}>
                          Show me more
                        </Button>
                      </Stack> */}
                      <Wallet />
                </Stack>
              </Stack>
            </HStack>
            
            <HStack justifyContent={'flex-end'} >

            <NativeBalance />
            <Account />
           </HStack>
        </VStack>
      </VStack>
    {/* </Flex> */}
    </Container>
  );
};



export default App;
